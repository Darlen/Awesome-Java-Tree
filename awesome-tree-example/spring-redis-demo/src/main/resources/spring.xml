<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<!--使用注解注入bean-->
	<context:annotation-config/>
    <context:component-scan base-package="tree.kafka"></context:component-scan>
    <context:property-placeholder location="classpath:redis.properties"/>

	<!-- redis pool 相关配置 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="maxWaitMillis" value="${redis.maxWait}" />
        <!--<property name="maxActive" value="${redis.maxActive}" />-->
        <property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>

    <!--Connection factory creating-->
	<bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
        p:hostName="${redis.host}" p:port="${redis.port}"
        p:password="${redis.password}" p:poolConfig-ref="poolConfig" p:database="${redis.database}" />

    <!--Helper class that simplifies Redis data access code-->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
	</bean>

	<!--<bean id="redisHelper" class="com.yyfq.commons.cache.RedisHelper">-->
		<!--<property name="redisTemplate" ref="redisTemplate" />-->
	<!--</bean>-->
</beans>
